/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-01-08 17:48:37 UTC)
 * on 2016-01-16 at 14:32:37 UTC 
 * Modify at your own risk.
 */
package com.campusconnect.communicator.models;

import android.os.Parcel;
import android.os.Parcelable;

//import com.activeandroid.Model;
//import com.activeandroid.annotation.Column;
//import com.activeandroid.annotation.Table;
import com.google.gson.annotations.SerializedName;

//@Table(name = "Clubs")
public class ModelsClubMiniForm implements Parcelable {


    //@Column(name = "followerCount")
    @SerializedName("followerCount")
    private String followerCount;

    //@Column(name = "description")
    @SerializedName("description")
    private String description;

    //@Column(name = "photoUrl", index = true)
    @SerializedName("photoUrl")
    private String photoUrl;

    //@Column(name = "memberCount")
    @SerializedName("memberCount")
    private String memberCount;

    //@Column(name = "collegeName")
    @SerializedName("collegeName")
    private String collegeName;

    //@Column(name = "adminName")
    @SerializedName("adminName")
    private String adminName;

    //@Column(name = "abbreviation")
    @SerializedName("abbreviation")
    private String abbreviation;

    //@Column(name = "isFollower")
    @SerializedName("isFollower")
    private String isFollower;

    //@Column(name = "isMember")
    @SerializedName("isMember")
    private String isMember;

    //@Column(name = "clubId", unique = true, onUniqueConflict = Column.ConflictAction.REPLACE, index = true)
    @SerializedName("clubId")
    private String clubId;

    //@Column(name = "name")
    @SerializedName("name")
    private String name;


    /**
     * @return The followerCount
     */
    public String getFollowerCount() {
        return followerCount;
    }

    /**
     * @param followerCount The followerCount
     */
    public void setFollowerCount(String followerCount) {
        this.followerCount = followerCount;
    }

    /**
     * @return The description
     */
    public String getDescription() {
        return description;
    }

    /**
     * @param description The description
     */
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * @return The photoUrl
     */
    public String getPhotoUrl() {
        return photoUrl;
    }

    /**
     * @param photoUrl The photoUrl
     */
    public void setPhotoUrl(String photoUrl) {
        this.photoUrl = photoUrl;
    }

    /**
     * @return The memberCount
     */
    public String getMemberCount() {
        return memberCount;
    }

    /**
     * @param memberCount The memberCount
     */
    public void setMemberCount(String memberCount) {
        this.memberCount = memberCount;
    }

    /**
     * @return The collegeName
     */
    public String getCollegeName() {
        return collegeName;
    }

    /**
     * @param collegeName The collegeName
     */
    public void setCollegeName(String collegeName) {
        this.collegeName = collegeName;
    }

    /**
     * @return The adminName
     */
    public String getAdminName() {
        return adminName;
    }

    /**
     * @param adminName The adminName
     */
    public void setAdminName(String adminName) {
        this.adminName = adminName;
    }

    /**
     * @return The abbreviation
     */
    public String getAbbreviation() {
        return abbreviation;
    }

    /**
     * @param abbreviation The abbreviation
     */
    public void setAbbreviation(String abbreviation) {
        this.abbreviation = abbreviation;
    }

    /**
     * @return The isFollower
     */
    public String getIsFollower() {
        return isFollower;
    }

    /**
     * @param isFollower The isFollower
     */
    public void setIsFollower(String isFollower) {
        this.isFollower = isFollower;
    }

    /**
     * @return The isMember
     */
    public String getIsMember() {
        return isMember;
    }

    /**
     * @param isMember The isMember
     */
    public void setIsMember(String isMember) {
        this.isMember = isMember;
    }

    /**
     * @return The clubId
     */
    public String getClubId() {
        return clubId;
    }

    /**
     * @param clubId The clubId
     */
    public void setClubId(String clubId) {
        this.clubId = clubId;
    }

    /**
     * @return The name
     */
    public String getName() {
        return name;
    }

    /**
     * @param name The name
     */
    public void setName(String name) {
        this.name = name;
    }


    @Override
    public int describeContents() {
        return 0;
    }

    @Override
    public void writeToParcel(Parcel dest, int flags) {
        dest.writeString(getAbbreviation());
        dest.writeString(getAdminName());
        dest.writeString(getClubId());
        dest.writeString(getCollegeName());
        dest.writeString(getDescription());
        dest.writeString(getFollowerCount());
        dest.writeString(getIsFollower());
        dest.writeString(getIsMember());
        dest.writeString(getMemberCount());
        dest.writeString(getName());
        dest.writeString(getPhotoUrl());
    }


    public static final Creator<ModelsClubMiniForm> CREATOR = new Creator<ModelsClubMiniForm>() {

        @Override
        public ModelsClubMiniForm createFromParcel(Parcel source) {
            ModelsClubMiniForm modelsClubMiniForm = new ModelsClubMiniForm();

            modelsClubMiniForm.setAbbreviation(source.readString());
            modelsClubMiniForm.setAdminName(source.readString());
            modelsClubMiniForm.setClubId(source.readString());
            modelsClubMiniForm.setCollegeName(source.readString());
            modelsClubMiniForm.setDescription(source.readString());
            modelsClubMiniForm.setFollowerCount(source.readString());
            modelsClubMiniForm.setIsFollower(source.readString());
            modelsClubMiniForm.setIsMember(source.readString());
            modelsClubMiniForm.setMemberCount(source.readString());
            modelsClubMiniForm.setName(source.readString());
            modelsClubMiniForm.setPhotoUrl(source.readString());

            return modelsClubMiniForm;
        }

        @Override
        public ModelsClubMiniForm[] newArray(int size) {
            return new ModelsClubMiniForm[size];
        }
    };
}
